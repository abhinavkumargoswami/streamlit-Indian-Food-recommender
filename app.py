# -*- coding: utf-8 -*-
"""streamlit2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KXZssXPVYA7rd_h-AKyP_dUiUwV2ad55
"""

import numpy as np
import pandas as pd

df = pd.read_csv("indian_food.csv")
df.head()

features = ["ingredients",	"diet",	"flavor_profile" , 	"course"	]
df2 = df[features]
df2.head()

df2["ingredients"] = df2["ingredients"].apply(str.lower)
df2.head()

df2["ingredients"] = [y.split(", ") for y in df2.ingredients]

df2.head()

def create_soup(x):
    return ' '.join(x['diet']) + ' ' + ' '.join(x['flavor_profile']) + ' ' + x['course'] + ' ' + ' '.join(x['ingredients'])
df2['soup'] = df2.apply(create_soup, axis=1)

from sklearn.feature_extraction.text import CountVectorizer

count = CountVectorizer()
count_matrix = count.fit_transform(df2['soup'])

from sklearn.metrics.pairwise import cosine_similarity

cosine_sim = cosine_similarity(count_matrix, count_matrix)

indices = pd.Series(df.index, index=df['name'])

def get_recommendations(name, cosine_sim=cosine_sim):
    idx = indices[name]
    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:11]
    ndx = [i[0] for i in sim_scores]
    return df['name'].iloc[ndx]

import streamlit as st
st.title('Recommender system')
option = st.selectbox('choose an option',df.name)
result = get_recommendations(option, cosine_sim)
result_table = pd.DataFrame(result.values,index = range(1,11), columns = ["Recommended"])
result_chart0 = df[df.name.isin(result.values)]
result_chart = result_chart0["flavor_profile"]
result_chart1 = result_chart0["diet"]

col1, col2 = st.beta_columns(2)
col1.header("List of recommendations")

col1.write(result_table)

import plotly.express as px

 
fig = px.pie(values=result_chart.value_counts(), names=result_chart.value_counts().index)


col2.plotly_chart(fig, use_container_width=True)
fig2 = fig = px.bar(x=result_chart1.value_counts(),y=result_chart1.value_counts().index)
fig2.update_xaxes(showgrid=False, zeroline=False)
fig2.update_yaxes(showgrid=False, zeroline=False)
st.plotly_chart(fig2, use_container_width=True)

